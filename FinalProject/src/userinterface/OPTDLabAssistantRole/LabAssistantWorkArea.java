/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.OPTDLabAssistantRole;

import Business.EcoSystem;
import Business.Organization.OPTOrganization.OPTELabOrganization;
import Business.Organization.Organization;
import Business.RegCenter.Donor;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.OrganMatchingWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Font;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Neha
 */
public class LabAssistantWorkArea extends javax.swing.JPanel {
    private JPanel userProcessContainer; 
    private UserAccount account;
    private Organization organization;
    private EcoSystem business;
    /**
     * Creates new form LabAssistantWorkArea
     */
    public LabAssistantWorkArea(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem business) {
        initComponents();
        this.business=business;
        this.account=account;
        this.userProcessContainer=userProcessContainer;
        this.organization=(OPTELabOrganization)organization;
        
        populateTable();
    }

    public void populateTable(){
        
        organMatchingDetailTable.getTableHeader().setFont(new Font("Tahoma", Font.PLAIN, 20));
        DefaultTableModel model = (DefaultTableModel) organMatchingDetailTable.getModel();
        model.setRowCount(0);
        
       for(WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
           
               Object[] row = new Object[6];
               row[0] = request;
               row[1] = ((OrganMatchingWorkRequest)(request)).getPatient().getPatientID();
               row[2] = ((OrganMatchingWorkRequest)(request)).getPatient().getPatientName();
               row[3] = ((OrganMatchingWorkRequest)(request)).getDonor().getDonorId();
               row[4] = ((OrganMatchingWorkRequest)(request)).getDonor().getDonorName();
               row[5] = request.getStatus();
               //row[7] = ((OrganMatchingWorkRequest)(request)).getResult();
               
               model.addRow(row);
           
       }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        processJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        organMatchingDetailTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 3, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("OPTD Lab Assistant Work Area");

        processJButton.setBackground(new java.awt.Color(0, 0, 0));
        processJButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        processJButton.setForeground(new java.awt.Color(255, 153, 153));
        processJButton.setText("Process");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });

        organMatchingDetailTable.setBackground(new java.awt.Color(204, 255, 255));
        organMatchingDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Patient ID", "Patient Name", "Donor ID", "Donor Name", "Organ Matching Test status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organMatchingDetailTable);
        if (organMatchingDetailTable.getColumnModel().getColumnCount() > 0) {
            organMatchingDetailTable.getColumnModel().getColumn(0).setPreferredWidth(30);
            organMatchingDetailTable.getColumnModel().getColumn(1).setPreferredWidth(30);
            organMatchingDetailTable.getColumnModel().getColumn(3).setPreferredWidth(30);
            organMatchingDetailTable.getColumnModel().getColumn(5).setPreferredWidth(150);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1029, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(427, 427, 427)
                        .addComponent(processJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(360, 360, 360)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addGap(60, 60, 60)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(processJButton)
                .addContainerGap(47, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed
        int selectedRow= organMatchingDetailTable.getSelectedRow();
        if(selectedRow >= 0){
           OrganMatchingWorkRequest organMatchRequest = (OrganMatchingWorkRequest) organMatchingDetailTable.getValueAt(selectedRow, 0);
           
           OrganMatchingTestProcessPanel organTestPanel = new OrganMatchingTestProcessPanel(userProcessContainer,organMatchRequest);
           userProcessContainer.add("OrganMatchingTestProcessPanel", organTestPanel);
           CardLayout layout = (CardLayout) userProcessContainer.getLayout();
           layout.next(userProcessContainer);
        }
        

    }//GEN-LAST:event_processJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable organMatchingDetailTable;
    private javax.swing.JButton processJButton;
    // End of variables declaration//GEN-END:variables
}
