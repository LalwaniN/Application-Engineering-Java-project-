/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.StateNetworkAdminRole;

//import Business.EcoSystem;
//import Business.Employee.Employee;
//import Business.Enterprise.Enterprise;
//import Business.Network.Network;
//import Business.Role.AdminRole;
//import Business.UserAccount.UserAccount;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Role.HospitalAdminRole;
import Business.Role.LegalRepresentativeRole;
import Business.Role.OPTEAdminRole;
import Business.Role.RegisterationCenterAdminRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.CountryNetworkAdminRole.CountryNetworkAdminWorkArea;

/**
 *
 * @author raunak
 */
public class ManageEnterpriseAdminJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount account;

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    public ManageEnterpriseAdminJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.account = account;
        usernameErrLabel.setVisible(false);
        passwordErrLabel.setVisible(false);
        nameErrLabel.setVisible(false);
        populateCityComboBox();
        populateTable();

    }

    private void populateTable() {
        enterpriseJTable.getTableHeader().setFont(new Font("Segoe UI Semibold", Font.PLAIN, 20));
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();
        model.setRowCount(0);
        
        for (Network network : system.getNetworkList()) {
            for (Network state: network.getSubNetwork()){
                 if (state.getUserAccountDirectory().getUserAccountList().get(0).getUsername().equals(account.getUsername())) {
                  for (Network cityNetwork : state.getSubNetwork()) {
                    for (Enterprise enterprise : cityNetwork.getEnterpriseDirectory().getEnterpriseList()) {
                        for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                            Object[] row = new Object[3];
                            row[0] = enterprise.getName();
                            row[1] = cityNetwork.getNetworkName();
                            row[2] = userAccount.getUsername();

                            model.addRow(row);
                        }
                    }
                }  
            }
           }
        }

    }

    private void populateEnterpriseComboBox(Network network) {
        enterpriseJComboBox.removeAllItems();
        enterpriseJComboBox.addItem("Please Select");
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            enterpriseJComboBox.addItem(enterprise);
        }

    }
    
    public boolean validateData() {
        if (usernameJTextField.getText().isEmpty()) {
            usernameErrLabel.setVisible(true);
            return false;
        } else {
            usernameErrLabel.setVisible(false);
        }
        if (passwordJPasswordField.getPassword().length <= 0) {
            passwordErrLabel.setVisible(true);
            return false;
        } else {
            passwordErrLabel.setVisible(false);
        }
        if (nameJTextField.getText().isEmpty()) {
            nameErrLabel.setVisible(true);
            return false;
        } else {
            nameErrLabel.setVisible(false);
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cityNameComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        enterpriseJComboBox = new javax.swing.JComboBox();
        submitJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        passwordJPasswordField = new javax.swing.JPasswordField();
        backJButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        countryNameTextBox = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        stateNameTextBox = new javax.swing.JTextField();
        passwordErrLabel = new javax.swing.JLabel();
        usernameErrLabel = new javax.swing.JLabel();
        nameErrLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 255));

        enterpriseJTable.setBackground(new java.awt.Color(204, 255, 255));
        enterpriseJTable.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Enterprise Name", "City", "Username"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseJTable);

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel1.setText("City:");

        cityNameComboBox.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        cityNameComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cityNameComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cityNameComboBoxItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel2.setText("Username");

        usernameJTextField.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel3.setText("Enterprise");

        enterpriseJComboBox.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        enterpriseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        submitJButton.setBackground(new java.awt.Color(0, 0, 0));
        submitJButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        submitJButton.setForeground(new java.awt.Color(255, 153, 153));
        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel4.setText("Password");

        nameJTextField.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel5.setText("Name");

        passwordJPasswordField.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N

        backJButton.setBackground(new java.awt.Color(0, 0, 0));
        backJButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 153, 153));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel6.setText("Country :");

        countryNameTextBox.setEditable(false);
        countryNameTextBox.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel7.setText("State:");

        stateNameTextBox.setEditable(false);
        stateNameTextBox.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N

        passwordErrLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        passwordErrLabel.setText("password cannot be blank");

        usernameErrLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        usernameErrLabel.setText("username cannot be blank");

        nameErrLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        nameErrLabel.setText("Name cannot be blank");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jLabel6)
                        .addGap(58, 58, 58)
                        .addComponent(countryNameTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jLabel7)
                        .addGap(86, 86, 86)
                        .addComponent(stateNameTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jLabel1)
                        .addGap(99, 99, 99)
                        .addComponent(cityNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jLabel3)
                        .addGap(50, 50, 50)
                        .addComponent(enterpriseJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(backJButton)
                        .addGap(569, 569, 569)
                        .addComponent(submitJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(50, 50, 50)
                                .addComponent(usernameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(56, 56, 56)
                                .addComponent(passwordJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(88, 88, 88)
                                .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordErrLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usernameErrLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameErrLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel6))
                    .addComponent(countryNameTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(stateNameTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(cityNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel3))
                    .addComponent(enterpriseJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(usernameErrLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel2))
                    .addComponent(usernameJTextField))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel4))
                    .addComponent(passwordJPasswordField)
                    .addComponent(passwordErrLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nameErrLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(backJButton))
                    .addComponent(submitJButton))
                .addContainerGap(41, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        if(validateData()){
            Enterprise enterprise = (Enterprise) enterpriseJComboBox.getSelectedItem();

        String username = usernameJTextField.getText();
        String password = String.valueOf(passwordJPasswordField.getPassword());
        String name = nameJTextField.getText();

        Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
        if (enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.Hospital)) {
            UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new HospitalAdminRole());
        } else if (enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.DonorRegCenter)) {
            UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new RegisterationCenterAdminRole());
        } else if (enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.OrganProcAndTransCenter)) {
            UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new OPTEAdminRole());
        }else if(enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.LegalEnterprise)){
            UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new LegalRepresentativeRole());
        }

        populateTable();
        }
        usernameJTextField.setText("");
        passwordJPasswordField.setText("");
        nameJTextField.setText("");

    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        StateAdminWorkArea sysAdminwjp = (StateAdminWorkArea) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void cityNameComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cityNameComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED && !cityNameComboBox.getSelectedItem().equals("Please select")) {
            Network city = (Network) cityNameComboBox.getSelectedItem();
            populateEnterpriseComboBox(city);
        }
    }//GEN-LAST:event_cityNameComboBoxItemStateChanged

  
//    private void populateStateComboBox() {
//
//        ArrayList<Network> networkList = system.getNetworkList();
//        Network network;
//        cityNameComboBox.removeAllItems();
//        stateComboBox.removeAllItems();
//        stateComboBox.addItem("Please select");
//        for (int i = 0; i < networkList.size(); i++) {
//            network = networkList.get(i);
//            if (network.getUserAccountDirectory().getUserAccountList().size() > 0) {
//                if (network.getUserAccountDirectory().getUserAccountList().get(0).getUsername().equals(account.getUsername())) {
//                    for (Network state : network.getSubNetwork()) {
//                        stateComboBox.addItem(state);
//                    }
//                }
//            }
//        }
//    }
     private void populateCityComboBox() {
        ArrayList<Network> networkList = system.getNetworkList();
        cityNameComboBox.removeAllItems();
        cityNameComboBox.addItem("Please select");
        for (Network country : networkList) {
            if (country.getUserAccountDirectory().getUserAccountList().size() > 0) {
                for (Network state : country.getSubNetwork()) {
                    if (state.getUserAccountDirectory().getUserAccountList().get(0).getUsername().equals(account.getUsername())) {
                        countryNameTextBox.setText(country.getNetworkName());
                        stateNameTextBox.setText(state.getNetworkName());
                        for (Network city : state.getSubNetwork()) {
                            cityNameComboBox.addItem(city);
                        }
                    }
                }
            }
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox cityNameComboBox;
    private javax.swing.JTextField countryNameTextBox;
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameErrLabel;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JLabel passwordErrLabel;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JTextField stateNameTextBox;
    private javax.swing.JButton submitJButton;
    private javax.swing.JLabel usernameErrLabel;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
